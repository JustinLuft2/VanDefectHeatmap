name: HeatMap Visual Creation üé®

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository üì¶
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node üß±
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Install Power BI Visual Tools üîß
        run: npm install -g powerbi-visuals-tools

      - name: Install Dependencies üìö
        run: npm install
        working-directory: vanHeatmap

      - name: Build .pbiviz üèÅ
        run: pbiviz package --no-minify --verbose
        working-directory: vanHeatmap

      - name: List dist folder üîç
        run: ls -l vanHeatmap/dist

      - name: Read and Increment Install Count üî¢
        id: inc
        run: |
          COUNT=$(cat install_count.txt)
          NEW_COUNT=$((COUNT + 1))
          echo $NEW_COUNT > install_count.txt
          echo "count=$NEW_COUNT" >> $GITHUB_OUTPUT

      - name: Commit Install Counter üíæ
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action Bot"
          git add install_count.txt
          if ! git diff --cached --quiet; then
            git commit -m "Increment install count to ${{ steps.inc.outputs.count }}"
            git push
          fi

      - name: Prepare & Commit PBIVIZ üìÇ
        run: |
          mkdir -p VisualDownload
          OUTPUT_NAME="HeatMap_Installation(${{ steps.inc.outputs.count }}).pbiviz"

          # Find the built PBIVIZ file
          PBIVIZ_FILE=$(ls vanHeatmap/dist/*.pbiviz 2>/dev/null | head -n1)
          if [ -z "$PBIVIZ_FILE" ]; then
            echo "‚ùå No PBIVIZ file found! Build may have failed."
            exit 1
          fi

          # Remove old PBIVIZ from Git and disk
          git rm -f VisualDownload/*.pbiviz || true
          rm -vf VisualDownload/*.pbiviz || true

          # Move new PBIVIZ
          mv "$PBIVIZ_FILE" "VisualDownload/$OUTPUT_NAME"
          echo "‚úÖ Output Created: VisualDownload/$OUTPUT_NAME"

          # Stage and commit
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action Bot"
          git add -A VisualDownload
          if ! git diff --cached --quiet; then
            git commit -m "Update HeatMap visual ‚úÖ (${OUTPUT_NAME})"
            git push
          fi

      - name: Upload PBIVIZ Artifact ‚òÅ
        uses: actions/upload-artifact@v4
        with:
          name: HeatMap_Installation
          path: VisualDownload/*.pbiviz
